################################################################################
#                  _       
#  ___ _ __   __ _| | _____  ___ 
# / __| '_ \ / _` | |/ / _ \/ __|
# \__ \ | | | (_| |   <  __/\__ \
# |___/_| |_|\__,_|_|\_\___||___/
#                 
# Data integration and machine learning pipeline built on Snakemake
#
# https://github.com/khughitt/snakes
#
{% set title_underline = '-' * (config['name'] | length + config['version'] | length + 1) %}
#  {{ config['name'] }} {{ config['version'] }}
#  {{ title_underline }}
#
#  Config : {{ config['config_file'] }}
#  Date   : {{ date_str }}
#
#  datasets:
{% for dataset_name, dataset in config['datasets'].items() %}
#  - {{ dataset_name }}: {{ dataset['path'] }}
{% endfor %}
#
{% set output_dir = '/'.join([config['output_dir'] | expanduser, config['version']]) %}
#  Output dir: {{ output_dir }} 
#
################################################################################
import glob
import operator
import os
import yaml
import numpy as np
import pandas as pd
from snakes import clustering, filters, gene_sets 
from snakes.actions import SnakesAction, SnakesActionGroup

# create output directory, if needed
output_dir = '{{ output_dir }}' 

{#############################################################################################}
{#                                                                                           #}
{# Global variables                                                                          #}
{#                                                                                           #}
{#############################################################################################}
{# list used to keep track of terminal datasets produced for each data source #}
{% set terminal_datasets = [] -%}

{# list used to keep track of simple rules that should not be run on a compute cluster #}
{% set local_rules = [] -%}

{#############################################################################################}
{#                                                                                           #}
{# Default target                                                                            #}
{#                                                                                           #}
{#############################################################################################}
rule all:
    input: "{{ output_dir }}/finished"

{#############################################################################################}
{#                                                                                           #}
{# Datasets
{#                                                                                           #}
{#############################################################################################}
{% for dataset_name, dataset in config['datasets'].items() %}
################################################################################
#
# {{ dataset.name }} workflow
#
################################################################################
  {% for action_id, action in wrangler.datasets[dataset_name].items() %}
rule {{ action_id }}:
    input: '{{ action.input }}'
    output: '{{ action.output }}'
    {% if not action.groupable and action.action_name != 'group' %}
      {# ============================== #}
      {# =   ACTION (Non-groupable)   = #}
      {# ============================== #}
      {%- include action.template %}
    {% else %}
    run:
        dat = pd.read_csv(input[0], index_col=0)
        {% if action.action_name == 'group' %}
            {# ==================== #}
            {# =   ACTION GROUP   = #}
            {# ==================== #}
            {% for group_action in action.actions %}
                {%- include action.actions[group_action].template %}
            {% endfor %}
        {% else %}
            {# ============== #}
            {# =   ACTION   = #}
            {# ============== #}
            {%- include action.template %}
        {% endif %}
        dat.to_csv(output[0])

    {% endif %}
  {% endfor %}
{% endfor %}

{#############################################################################################}
{#                                                                                           #}
{# Default target
{#                                                                                           #}
{#############################################################################################}
rule process_data_sources:
    input: expand("{{ output_dir }}/data/{processed_datasets}", processed_datasets={{ terminal_datasets }})
    output: touch("{{ output_dir }}/finished")

{#############################################################################################}
{#                                                                                           #}
{# Other settings                                                                            #}
{#                                                                                           #}
{#############################################################################################}
localrules: {{ wrangler.get_localrules() }}

{# vim: set softtabstop=2 shiftwidth=2 tabstop=2 filetype=snakemake: #}
# vim: set filetype=snakemake:
